

==================================================================
=== Short installation instructions (for Truffle/Graal people) ===
==================================================================

 === Download ===

mkdir freshdir
cd freshdir
  # pick your own name

hg clone http://hg.openjdk.java.net/graal/graal/
hg clone http://r.cs.purdue.edu/hg/fastr

  # note, it is important that the working copies have names "graal" and
  # "fastr" and they are side-by-side


 === Build ===

echo "../fastr" > graal/mx/includes
cd graal
./mx.sh build
./mx.sh eclipseinit

 === Test ===

./mx.sh rfannkuch 5

  # the output should be 
  #
  #   11
  #   Pfannkuchen(5) = 7
  #   NULL
  #   ... : Elapsed ... microseconds

 === Unit test ===

./mx.sh runittest

  # the output should end with something like
  #
  #   Time: 1.707
  #   OK (90 tests)

 === R console ===

./mx.sh r

 === Eclipse info ===

Fastr consists of one Eclipse project, named "fastr", which will be
generated into directory freshdir/fastr.  The main class to execute from
Eclipse is r.Console.

 === Platform ===

This has been tested on Ubuntu/Linux 12.10 with JDK 1.7.0_11.

======================================================
=== Additional instructions (for new FastR people) ===
======================================================

 === Prerequisites === 

  Ubuntu 12.10, 64-bit
    - install the build dependencies for OpenJDK 7

     apt-get build-dep openjdk-7

  JDK 1.7.0_11, 64-bit 
    - install the latest available from Oracle, into /opt
    - the distribution version of OpenJDK may also work
    - need to set JAVA_HOME before running eclipse or mx

      add this to your environment:

	export JAVA_HOME=/opt/jdk7
	export PATH=$JAVA_HOME/bin:$PATH

      assuming your JDK is in /opt/jdk7

      test by running "java -version" from the command line

  Eclipse 
    - install from the Eclipse website, "Eclipse IDE for Java developers"
      the file name should be eclipse-java-juno-SR1-linux-gtk-x86_64.tar.gz
      
      install into /opt

    - make sure to run Eclipse with the JDK installed in /opt (above)

 === Installation ===


1. Perform first the steps as described in 
     "Short installation instructions (for Truffle/Graal people)"
   (all from command line, not running Eclipse)

2. Run Eclipse, create a new workspace for the project, e.g. the "freshdir"
   used in the instructions above.

   File / Import / General / Existing Projects into Workspace

     - import these projects from the "graal" directory

       com.oracle.truffle.api   
       com.oracle.graal.graph

       (you can ignore all, but then close projects com.oracle.truffle.sl.*, 
        because of a known bug that takes down Eclipse during building)

	if you still experience this bug, shut down Eclipse, build from the
        command line using mx.sh, start eclipse again, right-click on
        "fastr" in the package explorer and check "Close unrelated projects"

     - import the "fastr" project from the "fastr" directory

3. Make sure you can run the FastR console from Eclipse (r.Console)

     - locate the class (Ctrl-Shift-T)
     - right click, Run As, Java Application

4. Make sure you can run the unit tests from Eclipse

     - right-click on the "fastr" project in package explorer
     - Run As, JUnit Test
     - you should get a green status, all tests passed

5. Additional Eclipse configuration for source code editing

   PLEASE make sure that your Eclipse is not reformatting the existing code
   in the repository. PLEASE make sure to stick to the coding style of the
   project.

   install these eclipse plugins: (Help / Eclipse Marketplace)

     - MercurialEclipse (to access mercurial repositories)

     - EclEmma Java Code Coverage (code coverage e.g. for tests)

     - Eclipse Checkstyle Plugin

   note the checkstyle configuration for the fastr project is stored in the
   repository, make sure it is used (fastr/.checkstyle, fastr/.checkstyle_checks)

   configure source formatting on save     
     right-click on fastr in the package explorer
     Properties / Java Editor / Save Actions

     - enable actions on save, but
       
       DISABLE "format source code" and "organize imports"
       ENABLE "additional actions"
         include "Remove trailing white spaces on all lines"

   